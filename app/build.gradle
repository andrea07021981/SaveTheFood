apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'dagger.hilt.android.plugin'

configurations.all {
    resolutionStrategy {
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }
}
android {
    compileSdkVersion 28
    buildToolsVersion "28.0.3"
    defaultConfig {
        applicationId "com.example.savethefood"
        minSdkVersion 21
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.example.savethefood.CustomTestRunner"
        buildConfigField 'String', 'BASE_FOOD_URL', "\"https://api.spoonacular.com/\""

        //Export DB Schema
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
        packagingOptions {
            exclude "**/attach_hotspot_windows.dll"
            exclude "META-INF/licenses/**"
            exclude "META-INF/AL2.0"
            exclude "META-INF/LGPL2.1"
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        kotlinOptions {
            jvmTarget = JavaVersion.VERSION_1_8.toString()
        }

        // Always show the result of every unit test when running via command line, even if it passes.
        testOptions.unitTests {
            includeAndroidResources = true
            returnDefaultValues = true //It's mandatory to not break unit tests
            // ...
        }

        //Shared fake data resource for test and android test
        sourceSets {
            androidTest {
                java.srcDirs += "src/sharedtest/java"
            }
            test {
                java.srcDirs += "src/sharedtest/java"
            }
        }
    }

    //For migration tests
    sourceSets {
        androidTest.assets.srcDirs += files("$projectDir/schemas".toString())
    }

    buildTypes {
        debug {
            minifyEnabled false
            testCoverageEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguardTest-rules.pro'
        }
    }

    // Enables data binding.
    dataBinding {
        enabled = true
    }

    // Enable parcellable
    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$version_kotlin"
    implementation 'com.google.android.material:material:1.2.1'
    // Support libraries
    implementation "androidx.appcompat:appcompat:$version_appcompat"
    implementation "androidx.fragment:fragment-ktx:$version_fragment"
    implementation "androidx.constraintlayout:constraintlayout:$version_constraint_layout"

    // Android KTX
    implementation "androidx.core:core-ktx:$version_core"

    // Room and Lifecycle dependencies
    implementation "androidx.room:room-runtime:$version_room"
    implementation 'androidx.palette:palette-ktx:1.0.0'
    kapt "androidx.room:room-compiler:$version_room"
    implementation "androidx.room:room-ktx:$version_room"
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
    implementation 'com.google.android.gms:play-services-location:17.1.0'
    implementation "androidx.lifecycle:lifecycle-extensions:$version_lifecycle_extensions"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$version_archlifecycle"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$version_coroutine"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$version_coroutine"

    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:2.3.2"
    implementation "androidx.navigation:navigation-ui-ktx:2.3.2"

    //Cards
    implementation 'androidx.cardview:cardview:1.0.0'

    implementation 'com.android.support:multidex:1.0.3'
    implementation 'com.journeyapps:zxing-android-embedded:3.6.0'

    //Play service

    // Moshi
    implementation "com.squareup.moshi:moshi:$version_moshi"
    implementation "com.squareup.moshi:moshi-kotlin:$version_moshi"

    // Retrofit with Moshi Converter
    implementation "com.squareup.retrofit2:retrofit:$version_retrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$version_retrofit"

    // Retrofit Coroutines Support
    implementation "com.jakewharton.retrofit:retrofit2-kotlin-coroutines-adapter:$version_retrofit_coroutines_adapter"

    // Glide
    implementation "com.github.bumptech.glide:glide:$version_glide"

    // RecyclerView
    implementation "androidx.recyclerview:recyclerview:$version_recyclerview"

    // Paging library
    implementation "androidx.paging:paging-runtime-ktx:$version_paging"

    //Interceptor and http loggin
    implementation 'com.squareup.okhttp3:okhttp:4.9.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.8.0'

    // Testing
    // Espresso
    // Core library
    // AndroidJUnitRunner and JUnit Rules
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test:rules:1.3.0'
    testImplementation "androidx.arch.core:core-testing:$version_arch_testing"

    // AndroidX Test - Instrumented testing
    androidTestImplementation "androidx.test.ext:junit:$version_androidX_test_ext_kotlin_runner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$version_espresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$version_espresso"
    testImplementation "org.hamcrest:hamcrest-all:$version_hamcrest"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_coroutine"
    // Dependencies for Android instrumented unit tests
    androidTestImplementation "junit:junit:$version_junit"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$version_coroutine"
    androidTestImplementation "androidx.arch.core:core-testing:$version_arch_testing"

    // AndroidX Test - JVM testing
    testImplementation "androidx.test:core-ktx:$version_androidX_test_core"
    testImplementation "org.robolectric:robolectric:$version_robolectric"
    testImplementation "androidx.test.ext:junit-ktx:$version_androidX_test_ext_kotlin_runner"


    // Testing code should not be included in the main code.
    // Once https://issuetracker.google.com/128612536 is fixed this can be fixed.
    debugImplementation "androidx.fragment:fragment-testing:$version_fragment"
    implementation "androidx.test:core:$version_androidX_test_core"

    // Dependencies for Android instrumented unit tests
    testImplementation "org.mockito:mockito-core:$version_mockito"
    androidTestImplementation "org.mockito:mockito-core:$version_mockito"
    androidTestImplementation "com.linkedin.dexmaker:dexmaker-mockito:$version_dex_maker"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$version_espresso"

    //Test Espresso idling resources
    implementation "androidx.test.espresso:espresso-idling-resource:$version_espresso"

    //Custom login effect github
    implementation 'br.com.simplepass:loading-button-android:2.2.0'

    //Analytics
    implementation "com.google.firebase:firebase-analytics-ktx:$version_analitycs"
    implementation "com.google.firebase:firebase-analytics:$version_analitycs"

    implementation "android.arch.work:work-runtime-ktx:$version_work"

    //Firebase Auth
    implementation "com.google.firebase:firebase-auth-ktx:$version_auth"

    //Firebase crashlytics
    implementation "com.google.firebase:firebase-crashlytics:$version_crashlytics"

    // Base Hilt dependencies:
    implementation "com.google.dagger:hilt-android:$version_hilt"
    kapt "com.google.dagger:hilt-android-compiler:$version_hilt"

    // ViewModel support dependencies:
    implementation 'androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02'
    kapt 'androidx.hilt:hilt-compiler:1.0.0-alpha02'

    // For Robolectric tests.
    testImplementation "com.google.dagger:hilt-android-testing:${version_hilt_test}"
    // ...with Kotlin.
    kaptTest "com.google.dagger:hilt-android-compiler:${version_hilt_test}"
    // ...with Java.
    testAnnotationProcessor "com.google.dagger:hilt-android-compiler:${version_hilt_test}"


    // For instrumented tests.
    androidTestImplementation "com.google.dagger:hilt-android-testing:${version_hilt_test}"
    // ...with Kotlin.
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:${version_hilt_test}"
    // ...with Java.
    androidTestAnnotationProcessor "com.google.dagger:hilt-android-compiler:${version_hilt_test}"

    implementation 'androidx.hilt:hilt-work:1.0.0-alpha02'
    // When using Java.
    annotationProcessor 'androidx.hilt:hilt-compiler:1.0.0-alpha02'

    // MockWebServer
    testImplementation("com.squareup.okhttp3:mockwebserver:4.9.0")
    testImplementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'

    testImplementation 'org.apache.maven:maven-ant-tasks:2.1.3'
}
